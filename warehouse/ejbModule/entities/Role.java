package entities;

// Generated Jan 28, 2015 12:24:24 PM by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role")
@NamedQuery(name="Role.findAll",query="select r from Role r")
public class Role implements java.io.Serializable {

	private Integer id;
	private String code;
	private String name;
	private String description;
	private List<Alarm> alarms = new ArrayList<Alarm>();
	private List<User> users = new ArrayList<User>();
	private List<Priviliges> priviligeses = new ArrayList<Priviliges>();

	public Role() {
	}

	public Role(String code, String name, String description,
			List<Alarm> alarms, List<User> users, List<Priviliges> priviligeses) {
		this.code = code;
		this.name = name;
		this.description = description;
		this.alarms = alarms;
		this.users = users;
		this.priviligeses = priviligeses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "code", length = 45)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "role_alarms", joinColumns = { @JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "alarm_id", nullable = false, updatable = false) })
	public List<Alarm> getAlarms() {
		return this.alarms;
	}

	public void setAlarms(List<Alarm> alarms) {
		this.alarms = alarms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public List<User> getUsers() {
		return this.users;
	}

	public void setUsers(List<User> users) {
		this.users = users;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "role_priviliges", joinColumns = { @JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "priviliges_id", nullable = false, updatable = false) })
	public List<Priviliges> getPriviligeses() {
		return this.priviligeses;
	}

	public void setPriviligeses(List<Priviliges> priviligeses) {
		this.priviligeses = priviligeses;
	}

}
